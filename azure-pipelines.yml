trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sonarqubeUrl: 'http://172.200.134.353:9000/'
  sonarqubeProjectKey: 'testazurepipeline'
  sonarqubeProjectName: 'Azure Pipeline'
  dockerRegistryServiceConnection: 'dockerhub'
  dockerRegistryUrl: 'https://index.docker.io/v1/'
  dockerUsername: $(ahmeddkhannn)
  dockerPassword: $(Sennatoenzo2002!)
  repository: 'ahmeddkhannn/azuretest'
  dockerfile: '**/Dockerfile'
  pythonScript: 'hello-world.py'

stages:
- build
- sonarqube-scan
- dockerize

jobs:
- job: build
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

- job: sonarqube-scan
  dependsOn: build
  steps:
  - task: SonarQubeScanner@4
    inputs:
      sonarqubeUrl: '$(http://172.200.134.35:9000/)'
      authToken: $(squ_40f548de2adddd2f4d31ca10cefb8435b9601f3a)
      projectKey: '$(testazurepipeline)'
      projectName: '$(Azure Pipeline)'
      sources: '.'
    displayName: 'SonarQube Scan'

- job: dockerize
  dependsOn: sonarqube-scan
  steps:
  - task: Docker@2
    inputs:
      command: 'buildAndPush'
      Dockerfile: '$(Dockerfile)'
      containerRegistry: '$(dockerRegistryServiceConnection)'
      repository: '$(repository)'
      tags: |
        latest
        $(Build.BuildId)
      additionalImageTags: |
        $(sonarqubeProjectKey):$(Build.BuildId)
    displayName: 'Dockerize and push'

  - script: |
      docker run -d -p 80:80 $(repository):latest
    displayName: 'Run Docker container'