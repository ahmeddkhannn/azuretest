trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  SONARQUBE_SCANNER_MODE: 'CLI'
  DOCKER_IMAGE_NAME: 'myapp'
  VM_USERNAME: 'azureuser'
  VM_IP: '172.200.134.353'

# Step 1: Checkout code
steps:
  - checkout: self

  # Step 2: Run SonarQube Analysis
  - task: SonarQubePrepare@6
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'CLI'
      configMode: 'file'
      cliProjectKey: 'testazurepipeline'
      cliProjectName: 'Azure Pipeline'
      cliProjectVersion: '1.0'
      cliSources: '.'
      serverUrl: 'http://172.200.134.35:9000'
      sonar.projectKey: 'testazurepipeline'
      sonar.projectName: 'Azure Pipeline'
      sonar.projectVersion: '1.0'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install Python Dependencies'

  - script: |
      # Install SonarScanner CLI
      curl -sSf https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.0-linux.zip > sonar-scanner-cli.zip
      unzip sonar-scanner-cli.zip
      export PATH=$PATH:/home/vsts/work/_temp/sonar-scanner-cli-6.0-linux/bin
      echo $PATH

  - script: |
      # Run SonarCloud CLI
      pwd
      which sonar-scanner-cli
      sonar-scanner-cli begin /k:testazurepipeline /d:sonar.host.url=http://172.200.134.35:9000 /d:sonar.language=py
      python hello-world.py
      sonar-scanner-cli end /d:sonar.login=squ_478c70bbfbf91ff24d3b73aa1ad093f9aa5a5c74
    displayName: 'Run SonarCloud CLI'

  - task: SonarQubeAnalyze@6
    inputs:
      projectKey: 'testazurepipeline'
      sonar.projectKey: 'testazurepipeline'
      options: '-X'
    displayName: 'Run SonarQube Analysis'

  # Step 3: Build Docker Image
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker Registry'
      repository: '$(DOCKER_IMAGE_NAME)'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: |
        latest

  # Step 4: SSH and Deploy Dockerized App to Azure VM
  - script: |
      ssh -o StrictHostKeyChecking=no $(VM_USERNAME)@$(VM_IP) "docker pull $(DOCKER_IMAGE_NAME):latest && docker run -d -p 80:80 $(DOCKER_IMAGE_NAME):latest"
    displayName: 'Deploy Docker Container to Azure VM'