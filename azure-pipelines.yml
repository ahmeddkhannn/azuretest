trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sonarqubeUrl: 'http://172.200.134.353:9000/'
  sonarqubeProjectKey: 'testazurepipeline'
  sonarqubeProjectName: 'Azure Pipeline'
  dockerRegistryServiceConnection: 'dockerhub'
  dockerRegistryUrl: 'https://index.docker.io/v1/'
  dockerUsername: $(ahmeddkhannn)
  dockerPassword: $(Sennatoenzo2002!)
  repository: 'ahmeddkhannn/azuretest'
  dockerfile: '**/Dockerfile'
  pythonScript: 'hello-world.py'

stages:
  - stage: build
    jobs:
      - job: build
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
              addToPath: true
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Install dependencies'

  - stage: sonarqube-scan
    dependsOn: build
    jobs:
      - job: sonarqube-scan
        steps:
          - task: SonarQubeScanner@4
            inputs:
              sonarqubeUrl: '$(sonarqubeUrl)'
              authToken: $(squ_40f548de2adddd2f4d31ca10cefb8435b9601f3a)
              projectKey: '$(sonarqubeProjectKey)'
              projectName: '$(sonarqubeProjectName)'
              sources: '.'
            displayName: 'SonarQube Scan'

  - stage: dockerize
    dependsOn: sonarqube-scan
    jobs:
      - job: dockerize
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              Dockerfile: '$(dockerfile)'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(repository)'
              tags: |
                latest
                $(Build.BuildId)
              additionalImageTags: |
                $(sonarqubeProjectKey):$(Build.BuildId)
            displayName: 'Dockerize and push'
          - script: |
              docker run -d -p 80:80 $(repository):latest
            displayName: 'Run Docker container'